{"version":3,"sources":["assets/cover/cover-image.jpg","components/About/index.js","components/Nav/index.js","utils/helpers.js","components/Contact/index.js","App.js","index.js"],"names":["About","className","id","src","coverImage","style","width","alt","Nav","props","contactSelected","setContactSelected","href","role","onClick","name","description","map","category","console","log","string","charAt","toUpperCase","slice","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","test","String","toLowerCase","validateEmail","value","length","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","rows","App","Contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c0700e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover-image.7345da58.jpg\";","// //////////////////////////////////////////////////import react and other source ///////////////////////////////////////////////\r\nimport React from 'react'\r\nimport coverImage from \"../../assets/cover/cover-image.jpg\";\r\n\r\n// ////////////////////////////////////////////////// About Component /////////////////////////////////////////////////////////////\r\nfunction About() {\r\n\r\n//   -----------------------------------------------------------------------JSX: a language that can represent HTML in JavaScript\r\n\r\n  return (\r\n    <section className=\"my-5\" >\r\n      <h1 id=\"about\">Welcome to Chao's Portfolio</h1>\r\n      <img src={coverImage} className=\"my-2\" style={{ width: \"100%\" }} alt=\"cover\" />\r\n      <div className=\"my-2\">\r\n        <p>\r\n          I love design!\r\n      </p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\n// ////////////////////////////////////////////////////Export About component  ////////////////////////////////////////////////////\r\nexport default About","// //////////////////////////////////////////////////import react and other source ///////////////////////////////////////////////\r\nimport React from \"react\";\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\n\r\n// //////////////////////////////////////////////////////////////// Nav Component /////////////////////////////////////////////////\r\nfunction Nav(props) {\r\n  // pass in contactSelected and setContactSelected to the Nav component as props\r\n  // deconstruct the contactSelected and setContactSelected functions from props\r\n  const {\r\n    contactSelected,\r\n    setContactSelected,\r\n  }= props;\r\n\r\n  const  categories = [\r\n    { name: 'commercial work', description: 'Works that provided for commercial use' },\r\n    { name: 'educational work', description: 'Works that provided for educational use' }\r\n  ];\r\n\r\n  const handleClick = () => {\r\n    console.log(\"click handled\")\r\n  }\r\n\r\n  //   -----------------------------------------------------------------------JSX: a language that can represent HTML in JavaScript\r\n  return (\r\n    <header data-testid=\"header\" className=\"flex-row px-1\">\r\n      <h2>\r\n        <a href=\"/\">\r\n          <span role=\"img\" aria-label=\"Rockman\"> ðŸ—¿</span> WO\r\n        </a>\r\n      </h2>\r\n      <nav>\r\n        <ul className=\"flex-row\">\r\n          {/* //////////////////////////////////////////////////////////////////////////// About me ///////////////////////////// */}\r\n          <li className=\"mx-2\">\r\n            <a href=\"#about\" onClick={() => setContactSelected(false)}>\r\n              About me\r\n            </a>\r\n          </li>\r\n          {/* //////////////////////////////////////////////////////////////////////////// Resume   ///////////////////////////// */}\r\n          <li className=\"mx-2\">\r\n          <span onClick={() => setContactSelected(false)}>\r\n              Resume\r\n            </span>\r\n          </li>\r\n          {/* //////////////////////////////////////////////////////////////////////////// Contact   ///////////////////////////// */}\r\n          <li className={`mx-2 ${contactSelected && 'navActive'}`}>\r\n            <span onClick={() => setContactSelected(true)}>Contact</span>\r\n          </li>\r\n          {/* //////////////////////////////////////////////////////////////////////////// Portfolio   ///////////////////////////// */}\r\n          {\r\n            categories.map((category) => (\r\n              <li className=\"mx-1\" key={category.name} >\r\n                <span onClick={() => { handleClick(); }}>\r\n                 {capitalizeFirstLetter(category.name)}\r\n                </span>\r\n              </li>\r\n            ))\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\n// ////////////////////////////////////////////////////Export Nav component  ////////////////////////////////////////////////////\r\nexport default Nav;","export function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  \r\n  export function validateEmail(email) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }","// //////////////////////////////////////////////////import react and other source ///////////////////////////////////////////////\r\nimport React, { useState } from 'react';\r\nimport { validateEmail } from '../../utils/helpers';\r\n\r\n// ////////////////////////////////////////////////////////////////ContactForm component /////////////////////////////////////////\r\nfunction ContactForm() {\r\n    // create a controlled component that can do client-side validation.\r\n    // to sync the form data of the user input with the component's state \"useState hook\"\r\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    // deconstruct formState object into properties\r\n  const { name, email, message } = formState;\r\n\r\n    // ------------------------------------------------------SYNC: using the setFormState function to update the formState value for the name property\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!errorMessage) {\r\n      setFormState({ [e.target.name]: e.target.value });\r\n      console.log('Form', formState);\r\n    }\r\n  };\r\n\r\n    // ------------------------------------SYNC: this function will sync thee internal state of the component formState with the user input from the DOM\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'email') {\r\n      const isValid = validateEmail(e.target.value);\r\n      if (!isValid) {\r\n        setErrorMessage('Your email is invalid.');\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    } else {\r\n      if (!e.target.value.length) {\r\n        setErrorMessage(`${e.target.name} is required.`);\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    }\r\n  };\r\n\r\n//   ------------------------------------------------------JSX: a language that can represent HTML in JavaScript-------------------------------------------\r\n  return (\r\n    <section>\r\n      <h1 data-testid=\"h1tag\">Contact me</h1>\r\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          {/* -------------------------------------------------------------------------------------SYNC: sync the default state with the user inputs */}\r\n          <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"message\">Message:</label>\r\n          <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\r\n        </div>\r\n        {errorMessage && (\r\n          <div>\r\n            <p className=\"error-text\">{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\n// ////////////////////////////////////////////////////Export ContactForm component  ////////////////////////////////////////////////////\r\nexport default ContactForm;\r\n","import \"./App.css\";\n// //////////////////////////////////////////////////import react and other child components ///////////////////////////////////////////////\nimport React, { useState } from 'react';\nimport About from \"./components/About\";\nimport Nav from \"./components/Nav\";\nimport ContactForm from './components/Contact';\n\n\n// ////////////////////////////////////////////////////Render child components in App component ////////////////////////////////////////////\nfunction App() {\n\n  // set the initial value of contactSelected to false. This is to prevent the contact form from showing when a user initially navigates to the homepage.\n  const [contactSelected, setContactSelected] = useState(false);\n\n  return (\n    <div>\n      {/* pass in contactSelected and setContactSelected to the Nav component as props */}\n      <Nav\n        contactSelected={contactSelected}\n        setContactSelected={setContactSelected}\n      ></Nav>\n      <main>\n        {/*  if the contactSelected is false, the Gallery and About components should be rendered,  */}\n        {/*  but if contactedSelected is true, the ContactForm component should be rendered */}\n        {!contactSelected ? (\n          <>\n            <About></About>\n          </>\n        ) : (\n            <ContactForm></ContactForm>\n          )}\n      </main>\n    </div>\n  );\n}\n\n// ////////////////////////////////////////////////////Export App component  //////////////////////////////////////////////////////////////\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}